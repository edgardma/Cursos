[MÚSICA] Cuando piensas en una pizza, hay muchos ingredientes diferentes que la crean. Cada uno de estos ingredientes son componentes separados, pero interactúan y se complementan entre sí. Todos ellos existen dentro del sistema mayor, en este caso, la pizza. Los diagramas de componentes de UML se refieren a los componentes de un sistema. Los componentes se definen como unidades encapsuladas independientes dentro de un sistema. Cada componente proporciona una interfaz para que otros componentes interactúen con él. Los diagramas de componentes se utilizan para visualizar cómo interactúan las piezas de un sistema y qué relaciones tienen entre ellas. Lo que diferencia a los diagramas de componentes de muchos otros diagramas es que se trata de una estructura de alto nivel y no de detalles como atributos y métodos. Se trata puramente de componentes y de cómo interactúan entre sí. Cuando se piensa en una pizza en un menú del restaurante, la pizza no tiene su preparación y métodos de cocción descritos en el menú. Por ejemplo, piense en una pizza de pollo tailandés. Los ingredientes enumerados en el menú serían pollo, salsa de cacahuete, cilantro, y queso. El menú sólo indica los ingredientes de la pizza, describe cómo se complementan entre sí, y representa cómo interactúan. Al enumerar todos los ingredientes, el cliente puede tener una mejor idea de si o no disfrutarían de la pizza basándose en cómo los componentes se unen como un todo. La descripción va más allá del listado de ingredientes y muestra las interacciones entre ellos. Es lo mismo para nuestro diagrama de componentes, que se centra en el componente en un sistema, no en sus métodos e implementaciones específicas. Los diagramas de componentes son una vista estática del sistema de software y representan el diseño del sistema en un punto específico de su desarrollo y evolución. Eso es como un menú del restaurante, que describe la visión prevista del chef de pizza, de diferentes ofertas de pizza en un punto específico de la vida del restaurante. La base de los diagramas de componentes son los componentes y sus relaciones. Cada componente de un diagrama tiene una relación muy específica con el otro componente a través de la interfaz que proporciona. Este es un conector de bola, que es cómo se muestra una interfaz proporcionada en diagramas de componentes. El propósito de una interfaz proporcionada es mostrar que un componente ofrece una interfaz para que otros interactúen con ella. La interfaz proporcionada significa que los componentes cliente y consumidor tienen una forma de comunicarse con ese componente. Este es un conector de socket, que muestra una interfaz requerida. La interfaz requerida es esencial para el diagrama de componentes para mostrar que un componente espera que una determinada interfaz proporcionada por algún otro componente sea capaz de cumplir sus responsabilidades. En un diagrama de componentes, una relación de ensamblaje es donde la interfaz proporcionada por un componente coincide con la interfaz requerida de otro componente. La interfaz proporcionada está representada por una bola, y la interfaz requerida es representada por un socket. Cuando está creando un diagrama de componentes, el primer paso es identificar los objetos principales utilizados en el sistema. A continuación, identificaría todas las bibliotecas relevantes que necesitaría para su sistema. Finalmente, se le ocurrirían las relaciones encontradas entre estos componentes . Una vez que sus objetos principales han sido identificados, el siguiente paso es identificar las bibliotecas que su sistema utilizará. Los diagramas de componentes no se centran puramente en lo que implementa. También se deben identificar todas las dependencias de implementación de terceros e integrar en el diagrama cuando corresponda. Esto significa que si utiliza una biblioteca de terceros en su sistema, debe denotarla en el diagrama de componentes. Echemos un vistazo a algunos diagramas de componentes específicos ahora. En general, el diagrama de componentes es muy útil para ilustrar las relaciones entre los componentes sin demasiados detalles abrumadores. Debido a su alto nivel de énfasis, es rápido de dibujar y se vuelve útil al principio del proceso de diseño. Estos diagramas de componentes se pueden dibujar en diferentes niveles y le permiten representar no solo sistemas enteros, sino también centrarse en subsistemas más particulares. Puede elegir la escala de su diagrama de componentes fácilmente, lo que lo convierte en una técnica de diseño versátil.